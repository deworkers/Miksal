/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@arrow-dark-name: 'arrow-dark';
@arrow-dark-x: 214px;
@arrow-dark-y: 149px;
@arrow-dark-offset-x: -214px;
@arrow-dark-offset-y: -149px;
@arrow-dark-width: 9px;
@arrow-dark-height: 17px;
@arrow-dark-total-width: 228px;
@arrow-dark-total-height: 192px;
@arrow-dark-image: '../img/sprite.png';
@arrow-dark: 214px 149px -214px -149px 9px 17px 228px 192px '../img/sprite.png' 'arrow-dark';
@arrow-whire-name: 'arrow-whire';
@arrow-whire-x: 213px;
@arrow-whire-y: 120px;
@arrow-whire-offset-x: -213px;
@arrow-whire-offset-y: -120px;
@arrow-whire-width: 9px;
@arrow-whire-height: 17px;
@arrow-whire-total-width: 228px;
@arrow-whire-total-height: 192px;
@arrow-whire-image: '../img/sprite.png';
@arrow-whire: 213px 120px -213px -120px 9px 17px 228px 192px '../img/sprite.png' 'arrow-whire';
@arrow-name: 'arrow';
@arrow-x: 188px;
@arrow-y: 83px;
@arrow-offset-x: -188px;
@arrow-offset-y: -83px;
@arrow-width: 19px;
@arrow-height: 35px;
@arrow-total-width: 228px;
@arrow-total-height: 192px;
@arrow-image: '../img/sprite.png';
@arrow: 188px 83px -188px -83px 19px 35px 228px 192px '../img/sprite.png' 'arrow';
@close-grey-name: 'close-grey';
@close-grey-x: 188px;
@close-grey-y: 42px;
@close-grey-offset-x: -188px;
@close-grey-offset-y: -42px;
@close-grey-width: 38px;
@close-grey-height: 39px;
@close-grey-total-width: 228px;
@close-grey-total-height: 192px;
@close-grey-image: '../img/sprite.png';
@close-grey: 188px 42px -188px -42px 38px 39px 228px 192px '../img/sprite.png' 'close-grey';
@close-name: 'close';
@close-x: 188px;
@close-y: 149px;
@close-offset-x: -188px;
@close-offset-y: -149px;
@close-width: 24px;
@close-height: 24px;
@close-total-width: 228px;
@close-total-height: 192px;
@close-image: '../img/sprite.png';
@close: 188px 149px -188px -149px 24px 24px 228px 192px '../img/sprite.png' 'close';
@gallery-name: 'gallery';
@gallery-x: 188px;
@gallery-y: 120px;
@gallery-offset-x: -188px;
@gallery-offset-y: -120px;
@gallery-width: 23px;
@gallery-height: 27px;
@gallery-total-width: 228px;
@gallery-total-height: 192px;
@gallery-image: '../img/sprite.png';
@gallery: 188px 120px -188px -120px 23px 27px 228px 192px '../img/sprite.png' 'gallery';
@height-name: 'height';
@height-x: 105px;
@height-y: 0px;
@height-offset-x: -105px;
@height-offset-y: 0px;
@height-width: 81px;
@height-height: 73px;
@height-total-width: 228px;
@height-total-height: 192px;
@height-image: '../img/sprite.png';
@height: 105px 0px -105px 0px 81px 73px 228px 192px '../img/sprite.png' 'height';
@info-name: 'info';
@info-x: 105px;
@info-y: 121px;
@info-offset-x: -105px;
@info-offset-y: -121px;
@info-width: 40px;
@info-height: 40px;
@info-total-width: 228px;
@info-total-height: 192px;
@info-image: '../img/sprite.png';
@info: 105px 121px -105px -121px 40px 40px 228px 192px '../img/sprite.png' 'info';
@menu-name: 'menu';
@menu-x: 105px;
@menu-y: 75px;
@menu-offset-x: -105px;
@menu-offset-y: -75px;
@menu-width: 52px;
@menu-height: 44px;
@menu-total-width: 228px;
@menu-total-height: 192px;
@menu-image: '../img/sprite.png';
@menu: 105px 75px -105px -75px 52px 44px 228px 192px '../img/sprite.png' 'menu';
@modal-close-name: 'modal-close';
@modal-close-x: 188px;
@modal-close-y: 0px;
@modal-close-offset-x: -188px;
@modal-close-offset-y: 0px;
@modal-close-width: 40px;
@modal-close-height: 40px;
@modal-close-total-width: 228px;
@modal-close-total-height: 192px;
@modal-close-image: '../img/sprite.png';
@modal-close: 188px 0px -188px 0px 40px 40px 228px 192px '../img/sprite.png' 'modal-close';
@phone-name: 'phone';
@phone-x: 209px;
@phone-y: 83px;
@phone-offset-x: -209px;
@phone-offset-y: -83px;
@phone-width: 16px;
@phone-height: 27px;
@phone-total-width: 228px;
@phone-total-height: 192px;
@phone-image: '../img/sprite.png';
@phone: 209px 83px -209px -83px 16px 27px 228px 192px '../img/sprite.png' 'phone';
@sm-name: 'sm';
@sm-x: 188px;
@sm-y: 175px;
@sm-offset-x: -188px;
@sm-offset-y: -175px;
@sm-width: 16px;
@sm-height: 16px;
@sm-total-width: 228px;
@sm-total-height: 192px;
@sm-image: '../img/sprite.png';
@sm: 188px 175px -188px -175px 16px 16px 228px 192px '../img/sprite.png' 'sm';
@width-name: 'width';
@width-x: 0px;
@width-y: 0px;
@width-offset-x: 0px;
@width-offset-y: 0px;
@width-width: 103px;
@width-height: 93px;
@width-total-width: 228px;
@width-total-height: 192px;
@width-image: '../img/sprite.png';
@width: 0px 0px 0px 0px 103px 93px 228px 192px '../img/sprite.png' 'width';
@zvuk-name: 'zvuk';
@zvuk-x: 0px;
@zvuk-y: 95px;
@zvuk-offset-x: 0px;
@zvuk-offset-y: -95px;
@zvuk-width: 79px;
@zvuk-height: 97px;
@zvuk-total-width: 228px;
@zvuk-total-height: 192px;
@zvuk-image: '../img/sprite.png';
@zvuk: 0px 95px 0px -95px 79px 97px 228px 192px '../img/sprite.png' 'zvuk';
@spritesheet-width: 228px;
@spritesheet-height: 192px;
@spritesheet-image: '../img/sprite.png';
@spritesheet-sprites: @arrow-dark @arrow-whire @arrow @close-grey @close @gallery @height @info @menu @modal-close @phone @sm @width @zvuk;
@spritesheet: 228px 192px '../img/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
